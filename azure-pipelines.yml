trigger:
  branches:
    include:
      - main  # Change this to your default branch      
variables:
- group: bliss-variable-group
stages:
- stage: Build
  displayName: "Build Stage"
  jobs:
  - job: Build
    pool:
      vmImage: 'windows-latest'
    displayName: "Build and Package .NET Framework App"
    steps:
    # Set Fetch Depth for SonarCloud
    - checkout: self
      fetchDepth: "0"
    # Install dotnet CLI for Entity framework
    - task: DotNetCoreCLI@2
      displayName: "Install EF Core Tools"
      inputs:
        command: "custom"
        custom: "tool"
        arguments: "install --global dotnet-ef --version 9.0.1"
    # Prepare SonarCloud Analysis
    - task: SonarCloudPrepare@2
      displayName: "Prepare SonarCloud Analysis"
      inputs:
        SonarCloud: "employee-management-app-sonarqube-connection"  
        organization: "devflow-blacktech-project" 
        scannerMode: "MSBuild"
        projectKey: "DevFlow-BlackTech-Project_devflow-employee-management-app-group3"
        projectName: "devflow-employee-management-app-group3"
    - task: NuGetToolInstaller@1
      displayName: "Install NuGet"
    - task: NuGetCommand@2
      displayName: "Restore NuGet Packages"
      inputs:
        command: "restore"
        restoreSolution: '$(solution)'
    - task: VSBuild@1
      displayName: "Build Solution"
      inputs:
        solution: "$(solution)"
        platform: "$(buildPlatform)"
        configuration: "$(buildConfiguration)"
    # Run SonarCloud Analysis
    - task: SonarCloudAnalyze@2
      displayName: "Run SonarCloud Analysis"    
    - task: VSBuild@1
      displayName: "Publish Web Application"
      inputs:
        solution: '$(solution)'
        msbuildArgs: /p:DeployOnBuild=true /p:DeployDefaultTarget=WebPublish /p:WebPublishMethod=FileSystem /p:publishUrl="$(Agent.TempDirectory)\WebAppContent\\"
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'  
    
    - task: DotNetCoreCLI@2
      displayName: "Run Database Migrations"
      inputs:
        azureSubscription: "$(serviceConnection)"
        command: "custom"
        custom: "ef"
        arguments: "database update --project $(migrationProjectPath)"

    - task: ArchiveFiles@2
      displayName: Archive Files
      inputs:
          rootFolderOrFile: $(Agent.TempDirectory)\WebAppContent
          includeRootFolder: false
          archiveFile: "$(Build.ArtifactStagingDirectory)/WebApp.zip"

    - task: PublishPipelineArtifact@1
      displayName: "Publish Build Artifacts"
      inputs:
        targetPath: "$(Build.ArtifactStagingDirectory)/WebApp.zip"
        artifact: 'techIntegrationartifact'  
    

- stage: Deploy
  displayName: "Deploy Stage"
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeployToAzure
    pool:
        vmImage: 'windows-latest'
    displayName: "Deploy to Azure App Service"
    environment: production
    strategy:
      runOnce:
        deploy:
          steps:        
          - task: DownloadBuildArtifacts@0
            displayName: "Download Build Artifact"
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'techIntegrationartifact'
              downloadPath: '$(System.ArtifactsDirectory)'
          - task: AzureWebApp@1
            displayName: "Deploy to Azure App Service"
            inputs:
              azureSubscription: "$(serviceConnection)"
              appType: "webApp"
              appName: "$(webAppName)"
              package: "$(Pipeline.Workspace)/techIntegrationartifact/WebApp.zip"
              deploymentMethod: "auto"
